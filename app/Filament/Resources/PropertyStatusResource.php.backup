<?php

namespace App\Filament\Resources;

use App\Filament\Resources\PropertyStatusResource\Pages;
use App\Models\PropertyStatus;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class PropertyStatusResource extends Resource
{
    protected static ?string $model = PropertyStatus::class;

    protected static string|\BackedEnum|null $navigationIcon = 'heroicon-o-flag';

    protected static string|\UnitEnum|null $navigationGroup = 'Property Management';

    protected static ?int $navigationSort = 2;

    public static function getNavigationLabel(): string
    {
        return __('Property Statuses');
    }

    public static function getModelLabel(): string
    {
        return __('Property Status');
    }

    public static function getPluralModelLabel(): string
    {
        return __('Property Statuses');
    }

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\Section::make('Basic Information')
                    ->schema([
                        Forms\Components\Grid::make(2)
                            ->schema([
                                Forms\Components\TextInput::make('name_ar')
                                    ->label('Arabic Name')
                                    ->required()
                                    ->maxLength(100),
                                Forms\Components\TextInput::make('name_en')
                                    ->label('English Name')
                                    ->required()
                                    ->maxLength(100),
                            ]),
                        Forms\Components\TextInput::make('slug')
                            ->label('Slug')
                            ->required()
                            ->maxLength(120)
                            ->unique(PropertyStatus::class, 'slug', ignoreRecord: true)
                            ->regex('/^[a-z0-9-]+$/'),
                        Forms\Components\Grid::make(2)
                            ->schema([
                                Forms\Components\Select::make('color')
                                    ->label('Badge Color')
                                    ->required()
                                    ->options([
                                        'gray' => 'Gray',
                                        'red' => 'Red',
                                        'yellow' => 'Yellow',
                                        'green' => 'Green',
                                        'blue' => 'Blue',
                                        'indigo' => 'Indigo',
                                        'purple' => 'Purple',
                                        'pink' => 'Pink',
                                    ])
                                    ->default('gray'),
                                Forms\Components\TextInput::make('icon')
                                    ->label('Icon')
                                    ->maxLength(50)
                                    ->default('heroicon-o-home'),
                            ]),
                    ]),
                Forms\Components\Section::make('Descriptions')
                    ->schema([
                        Forms\Components\Textarea::make('description_ar')
                            ->label('Arabic Description')
                            ->maxLength(1000),
                        Forms\Components\Textarea::make('description_en')
                            ->label('English Description')
                            ->maxLength(1000),
                    ]),
                Forms\Components\Section::make('Settings')
                    ->schema([
                        Forms\Components\Grid::make(3)
                            ->schema([
                                Forms\Components\Toggle::make('is_available')
                                    ->label('Available for Rent')
                                    ->default(true),
                                Forms\Components\Toggle::make('is_active')
                                    ->label('Active')
                                    ->default(true),
                                Forms\Components\TextInput::make('sort_order')
                                    ->label('Sort Order')
                                    ->numeric()
                                    ->default(0)
                                    ->minValue(0),
                            ]),
                    ]),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('name_ar')
                    ->label('Arabic Name')
                    ->searchable()
                    ->sortable(),
                Tables\Columns\TextColumn::make('name_en')
                    ->label('English Name')
                    ->searchable()
                    ->sortable(),
                Tables\Columns\TextColumn::make('slug')
                    ->label('Slug')
                    ->searchable()
                    ->sortable(),
                Tables\Columns\ColorColumn::make('color')
                    ->label('Color'),
                Tables\Columns\IconColumn::make('is_available')
                    ->label('Available')
                    ->boolean()
                    ->sortable(),
                Tables\Columns\IconColumn::make('is_active')
                    ->label('Active')
                    ->boolean()
                    ->sortable(),
                Tables\Columns\TextColumn::make('sort_order')
                    ->label('Sort Order')
                    ->sortable(),
                Tables\Columns\TextColumn::make('properties_count')
                    ->label('Properties Count')
                    ->sortable(),
                Tables\Columns\TextColumn::make('created_at')
                    ->label('Created At')
                    ->dateTime()
                    ->sortable()
                    ->toggleable(isToggledHiddenByDefault: true),
                Tables\Columns\TextColumn::make('updated_at')
                    ->label('Updated At')
                    ->dateTime()
                    ->sortable()
                    ->toggleable(isToggledHiddenByDefault: true),
            ])
            ->filters([
                Tables\Filters\TernaryFilter::make('is_active')
                    ->label('Active Status'),
                Tables\Filters\TernaryFilter::make('is_available')
                    ->label('Available for Rent'),
                Tables\Filters\SelectFilter::make('color')
                    ->label('Color')
                    ->options([
                        'gray' => 'Gray',
                        'red' => 'Red',
                        'yellow' => 'Yellow',
                        'green' => 'Green',
                        'blue' => 'Blue',
                        'indigo' => 'Indigo',
                        'purple' => 'Purple',
                        'pink' => 'Pink',
                    ]),
            ])
            ->filtersAboveTableColumns()
            ->actions([
                Tables\Actions\ViewAction::make(),
                Tables\Actions\EditAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListPropertyStatuses::route('/'),
            'create' => Pages\CreatePropertyStatus::route('/create'),
            'view' => Pages\ViewPropertyStatus::route('/{record}'),
            'edit' => Pages\EditPropertyStatus::route('/{record}/edit'),
        ];
    }
}